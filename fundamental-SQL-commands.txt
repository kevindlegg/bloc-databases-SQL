Exercises

Use the commands above to complete the following tasks, and submit the SQL statements. Real-world examples must be distinct from those used in the text.

1. List the commands for adding, updating, and deleting data.
    - Add = INSERT INTO; update = UPDATE; delete = DELETE
2. Explain the structure for each type of command.
    - INSERT INTO is followed by the table name you wish to insert data into, optionally, the column names are specified (wrapped in parens) if only inserting a subset of columns or the values are out of order, followed by VALUES keyword followed by comma-separated rows of data wrapped in parens, containing comma-separated columns values.  Values but be compatible with the corresponding column's data type.
    - UPDATE is also followed by the table name you wish to update, followed by the keyword SET is followed by the update you wish to perform in format "column = value".  An optional WHERE keyword can be used to update specific rows matching any number of criteria. If WHERE is not specified, all columns indicated for SET in all rows are updated.
    - DELETE is followed by the FROM keyword that is followed by the table name and optionally a WHERE statement if only specific rows of data meeting certain criteria is desired.  IF WHERE is not specified all rows are deleted.

3. What are some of the data types that can be used in tables? Give a real-world example of each type.
    - smallint: -32768
    - integer: 	+2147483647
    - decimal: 22.22
    - character: "Test value"
    - boolean: TRUE/FALSE

4. Decide how to create a new table to hold a list of people invited to a wedding dinner. The table needs to have first and last names, whether they sent in their RSVP, the number of guests they are bringing, and the number of meals (1 for adults and 1/2 for children).

    - Which data type would you use to store each of the following pieces of information?
        - First and last name. = text
        - Whether they sent in their RSVP. = boolean
        - Number of guests. = smallint
        - Number of meals. = decimal
    - Write a command that creates the table to track the wedding dinner.
        CREATE TABLE invites (
            firstName text,
            lastName text,
            rsvpReceived boolean,
            numberOfGuests smallint,
            numberOfMeals decimal(4,2)
        );

    - Write a command that adds a column to track whether the guest sent a thank you card.
        ALTER TABLE invites ADD COLUMN thankYou boolean;

    - You have decided to move the data about the meals to another table, so write a command to remove the column storing the number meals from the wedding table.
        ALTER TABLE invites DROP COLUMN numberOfMeals;
        
    - The guests will need a place to sit at the reception, so write a command that adds a column for table number.
        ALTER TABLE invites ADD COLUMN tableNumber smallint;

    - The wedding is over and we do not need to keep this information, so write a command that deletes the table numbers from the database.
        DROP TABLE invites;

5. Write a command to create a new table to hold the books in a library with the columns ISBN, title, author, genre, publishing date, number of copies, and available copies.
    CREATE TABLE books (
        ISBN bigint,
        title text,
        author text,
        genre text,
        publishDate date,
        copies smallint,
        available smallint
    );

    - Find three books and add their information to the table.
        INSERT INTO books VALUES (9780062654199,'The Alice Network','Kate Quinn','2017-06-06',1,1),
                                 (9780312577230,'The Great Alone','Kristin Hannah','2018-02-06',1,1),
                                 (9781476738017,'A Man Called Ove','Fredrik Backman','2014-07-15',1,1);

    - Someone has just checked out one of the books. Change the number of available copies to 1 fewer.
        UPDATE books SET available = available - 1 WHERE ISBN = 9780312577230;

    - Now one of the books has been added to the banned books list. Remove it from the table.
        DELETE FROM books WHERE ISBN = 9780062654199;

6. Write a command to make a new table to hold spacecrafts. Information should include id, name, year launched, country of origin, a brief description of the mission, orbiting body, if it is currently operating, and its approximate miles from Earth. In addition to the table creation, provide commands that perform the following operations:
    CREATE TABLE spacecrafts (
        id bigint,
        name text,
        yearLaunched integer,
        countryOfOrigin text,
        missionDescription text,
        orbitingBody text,
        inOperation boolean,
        mileFromEarth bigint
    );

    - Add three non-Earth-orbiting satellites to the table.
        INSERT INTO spacecrafts VALUES (30580,'THEMIS',2007,'United States','Magnetospheric research','Moon',TRUE,238900),
                                       (36576,'Akatsuki',2010,'Japan','Venus Orbiter','Venus',TRUE,340),
                                       (2126,'Luna 10',1966,'Soviet Union','Lunar Orbiter','Moon',FALSE,0);

    - Remove one of the satellites from the table since it has just crashed into the planet.
        DELETE FROM spacecrafts WHERE id = 36576;

    - Edit another satellite because it is no longer operating and change the value to reflect that.
        UPDATE spacecrafts SET inOperation = FALSE WHERE id = 30580;

7. Write a command to create a new table to hold the emails in your inbox. This table should include an id, the subject line, the sender, any additional recipients, the body of the email, the timestamp, whether or not you have read the email, and the id of the email chain it's in. Also provide commands that perform the following operations:
    CREATE TABLE inbox (
        id bigserial,
        subject text,
        sender text,
        copyRecipients text[],
        body text,
        receivedDate timestamp,
        read boolean,
        chainId bigint
    )'

    - Add three new emails to the inbox.
        INSERT INTO inbox (subject, sender, body, receivedDate, read) 
            VALUES ('Test Message 1','test@gmail.com','This is the body.',CURRENT_TIMESTAMP,TRUE),
                   ('Test Message 2','test@gmail.com','This is the body again.',CURRENT_TIMESTAMP,FALSE),
                   ('Test Message 3','test@gmail.com','This is the body of the last.',CURRENT_TIMESTAMP,FALSE);

    - You deleted one of the emails, so write a command to remove the row from the inbox table.
        DELETE FROM inbox WHERE subject = 'Test Message 2';

    - You started reading an email but just heard a crash in another room. Mark the email as unread before investigating the crash, so you can come back and read it later.
        UPDATE inbox SET read = FALSE WHERE subject = 'Test Message 1';